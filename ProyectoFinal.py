import streamlit as st
import sympy as sp
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# ------------------------------
# T√≠tulo e introducci√≥n
# ------------------------------
st.title("üìò Proyecto de F√≠sica: Ca√≠da Libre")
st.write("""
Este proyecto simula y analiza el movimiento de un objeto en **ca√≠da libre** usando Python, 
con c√°lculos simb√≥licos, datos simulados y visualizaciones gr√°ficas.
""")

# ------------------------------
# Definici√≥n de variables simb√≥licas
# ------------------------------
t = sp.Symbol('t', real=True)
h0, g, v0 = 100, 9.81, 0

# Ecuaci√≥n de la altura en funci√≥n del tiempo
h = h0 + v0*t - (1/2)*g*t**2
dh = sp.diff(h, t)  # Derivada: velocidad

st.header("üìå Modelos simb√≥licos")
st.write("**Altura (h(t))**:")
st.latex(sp.latex(h))

st.write("**Velocidad (h'(t))**:")
st.latex(sp.latex(dh))

# ------------------------------
# C√°lculos con Sympy
# ------------------------------
# Tiempo de impacto (cuando h(t) = 0)
t_impact = sp.solve(sp.Eq(h, 0), t)
t_impact = [sol.evalf() for sol in t_impact if sol.evalf() >= 0][0]

st.write("**Tiempo de impacto (cuando toca el suelo):**")
st.latex(f"t = {t_impact:.2f} \\, s")

# Velocidad en el impacto
v_impact = dh.subs(t, t_impact).evalf()
st.write("**Velocidad en el impacto:**")
st.latex(f"v = {v_impact:.2f} \\, m/s")

# ------------------------------
# Datos: simulados o cargados
# ------------------------------
st.header("üìä Datos para el an√°lisis")

opcion = st.radio("Selecciona la fuente de datos:", ["Simulados", "Cargar CSV"])

if opcion == "Simulados":
    # Generar datos simulados
    t_vals = np.linspace(0, float(t_impact), 50)
    h_vals = h0 - 0.5*g*t_vals**2
    df = pd.DataFrame({"Tiempo (s)": t_vals, "Altura (m)": h_vals})
    st.write("**Vista previa de datos simulados:**")
    st.dataframe(df.head(10))
else:
    archivo = st.file_uploader("Sube un archivo CSV con columnas 'Tiempo (s)' y 'Altura (m)'", type=["csv"])
    if archivo is not None:
        df = pd.read_csv(archivo)
        st.write("**Vista previa de datos cargados:**")
        st.dataframe(df.head(10))
# ------------------------------
# Gr√°fico de altura
# ------------------------------
st.subheader("Gr√°fico de la altura en funci√≥n del tiempo")

plt.figure(figsize=(6,4))
plt.plot(t_vals, h_vals, label="Altura (m)", color="blue")
plt.axhline(0, color="red", linestyle="--", label="Suelo")
plt.xlabel("Tiempo (s)")
plt.ylabel("Altura (m)")
plt.legend()
st.pyplot(plt)

# ------------------------------
# Gr√°fico de velocidad
# ------------------------------
st.subheader("Gr√°fico de la velocidad en funci√≥n del tiempo")

v_vals = -g*t_vals
plt.figure(figsize=(6,4))
plt.plot(t_vals, v_vals, label="Velocidad (m/s)", color="green")
plt.axhline(0, color="black", linestyle="--")
plt.xlabel("Tiempo (s)")
plt.ylabel("Velocidad (m/s)")
plt.legend()
st.pyplot(plt)

# ------------------------------
# Conclusiones
# ------------------------------
st.header("‚úÖ Conclusiones")
st.write("""
1. La funci√≥n de altura es cuadr√°tica y su derivada es lineal (velocidad).
2. El tiempo de impacto calculado simb√≥licamente coincide con la simulaci√≥n.
3. La velocidad en el impacto es aproximadamente la esperada para un objeto en ca√≠da libre desde 100 m.
""")


